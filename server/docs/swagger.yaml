definitions:
  entitys.KakaoTalkSocial:
    properties:
      email:
        type: string
      id:
        type: integer
      nickName:
        type: string
      thumbnailImageUrl:
        description: 이미지의 url을 저장하기 위한 최대 크기로 잡아놓았습니다.
        type: string
    type: object
  entitys.User:
    properties:
      avatarImage:
        items:
          type: integer
        type: array
      connectedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      kakaoTalkSocial:
        $ref: '#/definitions/entitys.KakaoTalkSocial'
      kakaoTalkSocialsId:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  models.ErrResponse:
    properties:
      message:
        example: 여기에 에러 메시지가 전달됩니다.
        type: string
    type: object
  models.JWTToken:
    properties:
      accessToken:
        example: header.payLoad.signature
        type: string
      refreshToken:
        example: header.payLoad.signature
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
  models.Pong:
    properties:
      message:
        example: pong
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        example: user01@test.com
        type: string
      password:
        example: test1!
        type: string
    required:
    - email
    - password
    type: object
  models.UserSignUp:
    properties:
      email:
        example: user01@test.com
        type: string
      name:
        example: 사용자01
        type: string
      password:
        example: test1!
        type: string
      passwordConfirm:
        example: test1!
        type: string
    required:
    - email
    - name
    - password
    - passwordConfirm
    type: object
info:
  contact: {}
paths:
  /ping:
    get:
      description: gin server의 헬스를 체크합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pong'
      summary: Server Health Check
  /users/login:
    post:
      consumes:
      - application/json
      description: 로그인을 성공 시 JWT token이 발급됩니다.
      parameters:
      - description: 로그인 정보
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JWTToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: ""
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: 로그인
      tags:
      - User
  /users/login/kakao:
    get:
      consumes:
      - application/json
      description: 카카오 oauth 인증 시 콜백되는 API 입니다. 환경변수에 주입된 경로로 token을 queryString에
        실어서 리디렉션 합니다.
      parameters:
      - description: 카카오 로그인 성공 시 전달되는 인가 코드
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: ""
          headers:
            Location:
              description: http://localhost:3000/auth-end?accessToken=header.payLoad.signature&refreshToken=header.payLoad.signature
              type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: 카카오 로그인
      tags:
      - User
  /users/signup:
    post:
      consumes:
      - application/json
      description: 사용자를 생성합니다.
      parameters:
      - description: 회원가입을 위한 정보
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: /users/1
              type: string
          schema:
            $ref: '#/definitions/entitys.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: 회원가입
      tags:
      - User
swagger: "2.0"
