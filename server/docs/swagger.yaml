definitions:
  models.ErrResponse:
    properties:
      message:
        example: 여기에 에러 메시지가 전달됩니다.
        type: string
    type: object
  models.Pong:
    properties:
      message:
        example: pong
        type: string
    type: object
  models.User:
    properties:
      email:
        example: user01@test.com
        type: string
      name:
        example: 사용자01
        type: string
      password:
        example: test1!
        type: string
      passwordConfirm:
        example: test1!
        type: string
    required:
    - email
    - name
    - password
    - passwordConfirm
    type: object
info:
  contact: {}
paths:
  /ping:
    get:
      description: gin server의 헬스를 체크합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pong'
      summary: Server Health Check
  /users/signup:
    post:
      consumes:
      - application/json
      description: 사용자를 생성합니다.
      parameters:
      - description: 회원가입을 위한 정보
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: /users/1
              type: string
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: 회원가입
      tags:
      - User
swagger: "2.0"
